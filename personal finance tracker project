import java.sql.*;
import java.util.*;

public class PersonalFinanceTracker {    

    private static List<String> descriptions = new ArrayList<>();
    private static List<Double> amounts = new ArrayList<>();
    private static List<String> types = new ArrayList<>();
    private static final String DB_URL = "jdbc:sqlite:finance_tracker.db";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        connectDatabase();
        int choice;

        while (true) {
            System.out.println("Personal Finance Tracker");
            System.out.println("1. Add Income");
            System.out.println("2. Add Expense");
            System.out.println("3. View Balance");
            System.out.println("4. View Transactions");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            
            choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    addIncome(scanner);
                    break;
                case 2:
                    addExpense(scanner);
                    break;
                case 3:
                    viewBalance();
                    break;
                case 4:
                    viewTransactions();
                    break;
                case 5:
                    System.out.println("Exiting program...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice! Please try again.");
            }
        }
    }

    public static void connectDatabase() {
        try (Connection conn = DriverManager.getConnection(DB_URL)) {
            if (conn != null) {
                System.out.println("Connected to the database.");
                createTable(conn);
            }
        } catch (SQLException e) {
            System.out.println("Error connecting to the database.");
            e.printStackTrace();
        }
    }

    public static void createTable(Connection conn) {
        String createTableSQL = "CREATE TABLE IF NOT EXISTS transactions ("
                + "id INTEGER PRIMARY KEY AUTOINCREMENT, "
                + "description TEXT NOT NULL, "
                + "amount REAL NOT NULL, "
                + "type TEXT NOT NULL);";
        
        try (Statement stmt = conn.createStatement()) {
            stmt.execute(createTableSQL);
        } catch (SQLException e) {
            System.out.println("Error creating table.");
            e.printStackTrace();
        }
    }

    public static void addIncome(Scanner scanner) {
        System.out.print("Enter income description: ");
        String description = scanner.nextLine();
        System.out.print("Enter income amount: ");
        double amount = scanner.nextDouble();
        scanner.nextLine();

        if (amount <= 0) {
            System.out.println("Income amount must be positive.");
            return;
        }

        descriptions.add(description);
        amounts.add(amount);
        types.add("Income");

        saveTransactionToDatabase(description, amount, "Income");
        System.out.println("Income added successfully!");
    }

    public static void addExpense(Scanner scanner) {
        System.out.print("Enter expense description: ");
        String description = scanner.nextLine();
        System.out.print("Enter expense amount: ");
        double amount = scanner.nextDouble();
        scanner.nextLine();

        if (amount <= 0) {
            System.out.println("Expense amount must be positive.");
            return;
        }

        descriptions.add(description);
        amounts.add(amount);
        types.add("Expense");

        saveTransactionToDatabase(description, amount, "Expense");
        System.out.println("Expense added successfully!");
    }

    public static void saveTransactionToDatabase(String description, double amount, String type) {
        String insertSQL = "INSERT INTO transactions(description, amount, type) VALUES(?, ?, ?)";
        
        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement pstmt = conn.prepareStatement(insertSQL)) {
            pstmt.setString(1, description);
            pstmt.setDouble(2, amount);
            pstmt.setString(3, type);
            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println("Error saving transaction to database.");
            e.printStackTrace();
        }
    }

    public static void viewBalance() {
        double balance = 0;
        for (int i = 0; i < amounts.size(); i++) {
            if (types.get(i).equals("Income")) {
                balance += amounts.get(i);
            } else {
                balance -= amounts.get(i);
            }
        }
        System.out.println("Current balance: $" + balance);
    }

    public static void viewTransactions() {
        if (descriptions.isEmpty()) {
            System.out.println("No transactions available.");
            return;
        }

        System.out.println("Transactions:");
        for (int i = 0; i < descriptions.size(); i++) {
            System.out.println("Type: " + types.get(i) + ", Description: " + descriptions.get(i) + ", Amount: $" + amounts.get(i));
        }
    }
}
